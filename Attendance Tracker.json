{"0":"import React, { useState, useEffect } from 'react';","1":"import { initializeApp } from 'firebase/app';","2":"import { getAuth, signInAnonymously, onAuthStateChanged, signInWithCustomToken } from 'firebase/auth';","3":"import { getFirestore, collection, doc, onSnapshot, addDoc, updateDoc, deleteDoc, setDoc, setLogLevel, serverTimestamp, query, orderBy, limit, getDocs } from 'firebase/firestore';","4":"import { Plus, Edit, Trash2, X, AlertTriangle, CheckCircle, Minus, Info, User, Calendar, Upload, ChevronDown, BookOpen, Download, Bell } from 'lucide-react';","5":"","6":"// --- Firebase Configuration ---","7":"const firebaseConfig = typeof __firebase_config !== 'undefined' ? JSON.parse(__firebase_config) : {};","8":"const appId = typeof __app_id !== 'undefined' ? __app_id : 'default-attendance-app';","9":"","10":"// --- Initialize Firebase ---","11":"let app;","12":"let auth;","13":"let db;","14":"","15":"try {","16":"app = initializeApp(firebaseConfig);","17":"auth = getAuth(app);","18":"db = getFirestore(app);","19":"// setLogLevel('debug');","20":"} catch (e) {","21":"console.error(\"Firebase initialization error:\", e);","22":"}","23":"","24":"// --- Main App Component ---","25":"export default function App() {","26":"const [user, setUser] = useState(null);","27":"const [loadingAuth, setLoadingAuth] = useState(true);","28":"","29":"useEffect(() => {","30":"if (!auth) return;","31":"const unsubscribe = onAuthStateChanged(auth, async (currentUser) => {","32":"if (currentUser) {","33":"setUser(currentUser);","34":"setLoadingAuth(false);","35":"} else {","36":"try {","37":"if (typeof __initial_auth_token !== 'undefined' && __initial_auth_token) {","38":"await signInWithCustomToken(auth, __initial_auth_token);","39":"} else {","40":"await signInAnonymously(auth);","41":"}","42":"} catch (error) {","43":"console.error(\"Authentication error:\", error);","44":"setLoadingAuth(false);","45":"}","46":"}","47":"});","48":"return () => unsubscribe();","49":"}, []);","50":"","51":"if (loadingAuth) {","52":"return <div className=\"flex items-center justify-center h-screen bg-gray-900 text-white\"><div className=\"animate-spin rounded-full h-16 w-16 border-t-2 border-b-2 border-blue-500\"></div></div>;","53":"}","54":"","55":"return (","56":"<div className=\"bg-gray-900 min-h-screen font-sans text-white\">","57":"<div className=\"container mx-auto max-w-5xl p-4\">","58":"{user ? <Dashboard userId={user.uid} /> : <p>Please wait, signing in...</p>}","59":"</div>","60":"</div>","61":");","62":"}","63":"","64":"// --- Header Component ---","65":"const Header = ({ onEditProfile, onTimetableClick, userName, hasTimetable }) => (","66":"<header className=\"mb-6 pb-4 border-b border-gray-700 flex flex-col md:flex-row items-center md:justify-between gap-4\">","67":"<div className=\"flex items-center gap-4\">","68":"<img","69":"src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcScHAyGmrOU6jKruuXh2Tc69HUF9-XZ9poo0A&s\"","70":"alt=\"MDI Gurgaon Logo\"","71":"className=\"h-16 md:h-20 w-auto\"","72":"onError={(e) => { e.target.onerror = null; e.target.src='https://placehold.co/200x80/1f2937/ffffff?text=Logo'; }}","73":"/>","74":"<div>","75":"<h1 className=\"text-3xl md:text-4xl font-bold text-blue-400 text-center md:text-left\">Attendance Tracker</h1>","76":"<div className=\"flex items-center justify-center md:justify-start gap-2 mt-1\">","77":"<p className=\"text-gray-300 text-lg\">Welcome, {userName || 'Student'}!</p>","78":"<button onClick={onEditProfile} className=\"text-gray-400 hover:text-blue-400 transition-colors\"><Edit size={18} /></button>","79":"</div>","80":"</div>","81":"</div>","82":"<button","83":"onClick={onTimetableClick}","84":"className=\"flex items-center gap-2 px-4 py-2 bg-indigo-600 hover:bg-indigo-700 rounded-lg shadow-lg transition-all transform hover:scale-105 w-full md:w-auto justify-center\"","85":">","86":"{hasTimetable ? <Calendar size={20} /> : <Plus size={20} />}","87":"{hasTimetable ? 'View Timetable' : 'Add Timetable'}","88":"</button>","89":"</header>","90":");","91":"","92":"// --- Dashboard Component ---","93":"const Dashboard = ({ userId }) => {","94":"const [courses, setCourses] = useState([]);","95":"const [loading, setLoading] = useState(true);","96":"const [profile, setProfile] = useState({ name: '', timetableUrl: '' });","97":"const [isAddModalOpen, setAddModalOpen] = useState(false);","98":"const [isEditProfileModalOpen, setEditProfileModalOpen] = useState(false);","99":"const [profileModalMode, setProfileModalMode] = useState('profile');","100":"const [isTimetableModalOpen, setTimetableModalOpen] = useState(false);","101":"const [alertInfo, setAlertInfo] = useState({ isOpen: false, message: '' });","102":"const [initialProfileCheckDone, setInitialProfileCheckDone] = useState(false);","103":"const [openCourseId, setOpenCourseId] = useState(null);","104":"","105":"useEffect(() => {","106":"if (!userId) return;","107":"","108":"const profileDocRef = doc(db, `artifacts/${appId}/users/${userId}/profile`, 'info');","109":"const unsubscribeProfile = onSnapshot(profileDocRef, (docSnap) => {","110":"const data = docSnap.exists() ? docSnap.data() : { name: null, timetableUrl: null };","111":"setProfile({ name: data.name || '', timetableUrl: data.timetableUrl || '' });","112":"","113":"if (!initialProfileCheckDone) {","114":"if (!data.name) {","115":"setProfileModalMode('profile');","116":"setEditProfileModalOpen(true);","117":"}","118":"setInitialProfileCheckDone(true);","119":"}","120":"});","121":"","122":"const coursesCollectionPath = `artifacts/${appId}/users/${userId}/courses`;","123":"const unsubscribeCourses = onSnapshot(collection(db, coursesCollectionPath), (snapshot) => {","124":"setCourses(snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() })));","125":"setLoading(false);","126":"}, (error) => {","127":"console.error(\"Error fetching courses:\", error);","128":"setLoading(false);","129":"});","130":"","131":"return () => {","132":"unsubscribeProfile();","133":"unsubscribeCourses();","134":"};","135":"}, [userId, initialProfileCheckDone]);","136":"","137":"const addCourse = async (course) => {","138":"try {","139":"const newCourseRef = await addDoc(collection(db, `artifacts/${appId}/users/${userId}/courses`), course);","140":"setAddModalOpen(false);","141":"setOpenCourseId(newCourseRef.id);","142":"} catch (error) { console.error(\"Error adding course:\", error); }","143":"};","144":"","145":"const saveProfile = async (newName, timetableBase64) => {","146":"if (!auth.currentUser) {","147":"setAlertInfo({ isOpen: true, message: \"Authentication error. Please refresh and try again.\" });","148":"return;","149":"}","150":"","151":"const profileDocRef = doc(db, `artifacts/${appId}/users/${auth.currentUser.uid}/profile`, 'info');","152":"","153":"try {","154":"await setDoc(profileDocRef, { name: newName.trim(), timetableUrl: timetableBase64 }, { merge: true });","155":"setEditProfileModalOpen(false);","156":"} catch (error) {","157":"console.error(\"Error saving profile:\", error);","158":"setAlertInfo({isOpen: true, message: \"Failed to save profile.\"});","159":"}","160":"};","161":"","162":"const handleTimetableClick = () => {","163":"if (profile.timetableUrl) {","164":"setTimetableModalOpen(true);","165":"} else {","166":"setProfileModalMode('timetable');","167":"setEditProfileModalOpen(true);","168":"}","169":"};","170":"","171":"const handleEditProfileClick = () => {","172":"setProfileModalMode('profile');","173":"setEditProfileModalOpen(true);","174":"};","175":"","176":"const handleChangeTimetable = () => {","177":"setTimetableModalOpen(false);","178":"setProfileModalMode('timetable');","179":"setEditProfileModalOpen(true);","180":"};","181":"","182":"const handleToggleCourse = (courseId) => {","183":"setOpenCourseId(prevOpenId => (prevOpenId === courseId ? null : courseId));","184":"};","185":"","186":"const exportAllData = async () => {","187":"let csvContent = \"Course Name,Date,Status\n\";","188":"for (const course of courses) {","189":"const logCollectionRef = collection(db, `artifacts/${appId}/users/${userId}/courses/${course.id}/log`);","190":"const q = query(logCollectionRef, orderBy('timestamp', 'asc'));","191":"const logSnapshot = await getDocs(q);","192":"logSnapshot.forEach(logDoc => {","193":"const logData = logDoc.data();","194":"const date = logData.timestamp ? new Date(logData.timestamp.seconds * 1000).toLocaleString() : 'N/A';","195":"csvContent += `\"${course.name}\",\"${date}\",\"${logData.status}\"\n`;","196":"});","197":"}","198":"","199":"const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });","200":"const link = document.createElement(\"a\");","201":"if (link.download !== undefined) {","202":"const url = URL.createObjectURL(blob);","203":"link.setAttribute(\"href\", url);","204":"link.setAttribute(\"download\", \"all_attendance_data.csv\");","205":"link.style.visibility = 'hidden';","206":"document.body.appendChild(link);","207":"link.click();","208":"document.body.removeChild(link);","209":"}","210":"};","211":"","212":"return (","213":"<>","214":"<Header","215":"onEditProfile={handleEditProfileClick}","216":"onTimetableClick={handleTimetableClick}","217":"userName={profile.name}","218":"hasTimetable={!!profile.timetableUrl}","219":"/>","220":"<main>","221":"<SmartReminders courses={courses} userId={userId} />","222":"<TodaysClasses courses={courses} />","223":"<div className=\"flex justify-center items-center gap-4 mb-6\">","224":"<button onClick={() => setAddModalOpen(true)} className=\"flex items-center gap-2 px-6 py-3 bg-blue-600 hover:bg-blue-700 rounded-lg shadow-lg transition-transform transform hover:scale-105\">","225":"<Plus size={20} /> Add New Course","226":"</button>","227":"<button onClick={exportAllData} className=\"flex items-center gap-2 px-6 py-3 bg-gray-600 hover:bg-gray-700 rounded-lg shadow-lg transition-transform transform hover:scale-105\">","228":"<Download size={20} /> Export All Data","229":"</button>","230":"</div>","231":"","232":"{loading ? <p className=\"text-center text-gray-400\">Loading courses...</p> : courses.length === 0 ? (","233":"<div className=\"text-center bg-gray-800 p-8 rounded-lg\">","234":"<h3 className=\"text-xl font-semibold\">No courses yet!</h3>","235":"<p className=\"text-gray-400 mt-2\">Click \"Add New Course\" to get started.</p>","236":"</div>","237":") : (","238":"<div className=\"space-y-2\">","239":"{courses.map(course => <CourseAccordion key={course.id} course={course} userId={userId} setAlertInfo={setAlertInfo} isOpen={openCourseId === course.id} onToggle={() => handleToggleCourse(course.id)} />)}","240":"</div>","241":")}","242":"","243":"{isAddModalOpen && <AddCourseModal onClose={() => setAddModalOpen(false)} onAddCourse={addCourse} />}","244":"{isEditProfileModalOpen && <EditProfileModal mode={profileModalMode} currentProfile={profile} onSave={saveProfile} onClose={() => setEditProfileModalOpen(false)} />}","245":"{isTimetableModalOpen && <TimetableModal timetableUrl={profile.timetableUrl} onClose={() => setTimetableModalOpen(false)} onChangeTimetable={handleChangeTimetable} />}","246":"{alertInfo.isOpen && <AlertModal message={alertInfo.message} onClose={() => setAlertInfo({ isOpen: false, message: '' })} />}","247":"</main>","248":"</>","249":");","250":"};","251":"","252":"// --- SmartReminders Component ---","253":"const SmartReminders = ({ courses, userId }) => {","254":"const [reminders, setReminders] = useState([]);","255":"","256":"useEffect(() => {","257":"const calculateReminders = async () => {","258":"const days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];","259":"const currentDay = days[new Date().getDay()];","260":"const coursesToday = courses.filter(course =>","261":"course.schedule && course.schedule.days && course.schedule.days.includes(currentDay)","262":");","263":"","264":"const newReminders = [];","265":"","266":"for (const course of coursesToday) {","267":"const logCollectionRef = collection(db, `artifacts/${appId}/users/${userId}/courses/${course.id}/log`);","268":"const logSnapshot = await getDocs(logCollectionRef);","269":"const missed = logSnapshot.docs.filter(doc => doc.data().status === 'absent').length;","270":"","271":"const total = course.totalSessions || 1;","272":"const maxMissable = Math.floor(total * 0.2);","273":"const bunksLeft = maxMissable - missed;","274":"","275":"if (bunksLeft <= 1) {","276":"newReminders.push({ ...course, bunksLeft });","277":"}","278":"}","279":"setReminders(newReminders);","280":"};","281":"","282":"if (courses.length > 0 && userId) {","283":"calculateReminders();","284":"}","285":"}, [courses, userId]);","286":"","287":"if (reminders.length === 0) return null;","288":"","289":"return (","290":"<div className=\"bg-yellow-900/50 border border-yellow-500 rounded-xl p-4 mb-6\">","291":"<h3 className=\"text-xl font-bold text-center text-yellow-300 mb-3 flex items-center justify-center gap-2\">","292":"<Bell size={20} /> Smart Reminders","293":"</h3>","294":"<div className=\"space-y-2\">","295":"{reminders.map(course => (","296":"<div key={course.id} className=\"bg-yellow-800/50 p-3 rounded-lg text-center\">","297":"<p className=\"font-semibold text-yellow-200\">","298":"Don't miss <span className=\"font-bold\">{course.name}</span> today at {course.schedule.time || 'class'}!","299":"</p>","300":"<p className=\"text-sm text-yellow-300\">","301":"You only have <span className=\"font-bold\">{course.bunksLeft >= 0 ? course.bunksLeft : 0}</span> bunk(s) left.","302":"</p>","303":"</div>","304":"))}","305":"</div>","306":"</div>","307":");","308":"};","309":"","310":"","311":"// --- TodaysClasses Component ---","312":"const TodaysClasses = ({ courses }) => {","313":"const [today, setToday] = useState('');","314":"const [todaysCourses, setTodaysCourses] = useState([]);","315":"","316":"useEffect(() => {","317":"const days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];","318":"const now = new Date();","319":"const currentDay = days[now.getDay()];","320":"setToday(currentDay);","321":"","322":"const scheduledToday = courses.filter(course =>","323":"course.schedule && course.schedule.days && course.schedule.days.includes(currentDay)","324":").sort((a, b) => {","325":"const timeA = a.schedule.time || \"00:00\";","326":"const timeB = b.schedule.time || \"00:00\";","327":"return timeA.localeCompare(timeB);","328":"});","329":"setTodaysCourses(scheduledToday);","330":"}, [courses]);","331":"","332":"if(todaysCourses.length === 0) return null;","333":"","334":"return (","335":"<div className=\"bg-gray-800 rounded-xl p-4 mb-6\">","336":"<h3 className=\"text-xl font-bold text-center text-blue-300 mb-3\">Today's Schedule ({today})</h3>","337":"<div className=\"space-y-2\">","338":"{todaysCourses.map(course => (","339":"<div key={course.id} className=\"bg-gray-900 p-3 rounded-lg flex justify-between items-center\">","340":"<span className=\"font-semibold\">{course.name}</span>","341":"<span className=\"text-sm text-gray-400\">{course.schedule.time || 'No time set'}</span>","342":"</div>","343":"))}","344":"</div>","345":"</div>","346":");","347":"};","348":"","349":"","350":"// --- CourseAccordion Component ---","351":"const CourseAccordion = ({ course, userId, setAlertInfo, isOpen, onToggle }) => {","352":"const [isEditModalOpen, setEditModalOpen] = useState(false);","353":"const [isDeleteModalOpen, setDeleteModalOpen] = useState(false);","354":"const [isLogModalOpen, setLogModalOpen] = useState(false);","355":"const [attendanceLog, setAttendanceLog] = useState([]);","356":"const [notes, setNotes] = useState(course.notes || '');","357":"","358":"const attended = attendanceLog.filter(entry => entry.status === 'present').length;","359":"const missed = attendanceLog.filter(entry => entry.status === 'absent').length;","360":"","361":"const total = course.totalSessions || 1;","362":"const totalAttended = attended + missed;","363":"const attendancePercentage = totalAttended > 0 ? Math.round((attended / totalAttended) * 100) : 0;","364":"const sessionsLeft = total - totalAttended;","365":"","366":"const maxMissable = Math.floor(total * 0.2);","367":"const bunksLeft = maxMissable - missed;","368":"","369":"useEffect(() => {","370":"const logCollectionRef = collection(db, `artifacts/${appId}/users/${userId}/courses/${course.id}/log`);","371":"const q = query(logCollectionRef, orderBy('timestamp', 'desc'));","372":"const unsubscribe = onSnapshot(q, (snapshot) => {","373":"setAttendanceLog(snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() })));","374":"});","375":"return () => unsubscribe();","376":"}, [userId, course.id]);","377":"","378":"useEffect(() => {","379":"const handler = setTimeout(() => {","380":"if (notes !== (course.notes || '')) {","381":"const courseDocRef = doc(db, `artifacts/${appId}/users/${userId}/courses`, course.id);","382":"updateDoc(courseDocRef, { notes: notes });","383":"}","384":"}, 1000);","385":"","386":"return () => {","387":"clearTimeout(handler);","388":"};","389":"}, [notes, course.notes, userId, course.id]);","390":"","391":"const getProgressBarColor = () => {","392":"if (attendancePercentage >= 80) return 'bg-green-500';","393":"if (attendancePercentage >= 60) return 'bg-yellow-500';","394":"return 'bg-red-500';","395":"};","396":"","397":"const handleAttendance = async (type) => {","398":"if (sessionsLeft <= 0) {","399":"setAlertInfo({ isOpen: true, message: \"All sessions are accounted for. Edit the course to increase total sessions if needed.\" });","400":"return;","401":"}","402":"const logCollectionRef = collection(db, `artifacts/${appId}/users/${userId}/courses/${course.id}/log`);","403":"await addDoc(logCollectionRef, { status: type, timestamp: serverTimestamp() });","404":"};","405":"","406":"const handleUndo = async (type) => {","407":"const logCollectionRef = collection(db, `artifacts/${appId}/users/${userId}/courses/${course.id}/log`);","408":"const q = query(logCollectionRef, orderBy('timestamp', 'desc'), limit(1));","409":"const querySnapshot = await getDocs(q);","410":"if (!querySnapshot.empty) {","411":"const lastLogDoc = querySnapshot.docs[0];","412":"if (lastLogDoc.data().status === type) {","413":"await deleteDoc(lastLogDoc.ref);","414":"} else {","415":"setAlertInfo({isOpen: true, message: `No recent '${type}' entry to undo.`});","416":"}","417":"}","418":"};","419":"","420":"const updateCourse = async (updatedCourse) => {","421":"const courseDocRef = doc(db, `artifacts/${appId}/users/${userId}/courses`, course.id);","422":"await updateDoc(courseDocRef, updatedCourse);","423":"setEditModalOpen(false);","424":"};","425":"","426":"const deleteCourse = async () => {","427":"const courseDocRef = doc(db, `artifacts/${appId}/users/${userId}/courses`, course.id);","428":"await deleteDoc(courseDocRef);","429":"setDeleteModalOpen(false);","430":"};","431":"","432":"const exportLog = () => {","433":"let csvContent = \"Date,Status\n\";","434":"attendanceLog.slice().reverse().forEach(entry => {","435":"const date = entry.timestamp ? new Date(entry.timestamp.seconds * 1000).toLocaleString() : 'N/A';","436":"csvContent += `\"${date}\",\"${entry.status}\"\n`;","437":"});","438":"","439":"const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });","440":"const link = document.createElement(\"a\");","441":"if (link.download !== undefined) {","442":"const url = URL.createObjectURL(blob);","443":"link.setAttribute(\"href\", url);","444":"link.setAttribute(\"download\", `${course.name}_attendance_log.csv`);","445":"link.style.visibility = 'hidden';","446":"document.body.appendChild(link);","447":"link.click();","448":"document.body.removeChild(link);","449":"}","450":"};","451":"","452":"return (","453":"<div className=\"bg-gray-800 rounded-xl shadow-lg transition-all duration-300 border-2 border-transparent hover:border-blue-500\">","454":"<div className=\"flex justify-between items-center p-4 cursor-pointer\" onClick={onToggle}>","455":"<h3 className=\"text-xl font-bold text-gray-100\">{course.name}</h3>","456":"<div className=\"flex items-center gap-4\">","457":"<span className={`text-lg font-bold ${getProgressBarColor().replace('bg-', 'text-')}`}>{totalAttended > 0 ? `${attendancePercentage}%` : 'N/A'}</span>","458":"<ChevronDown className={`transform transition-transform duration-300 ${isOpen ? 'rotate-180' : ''}`} />","459":"</div>","460":"</div>","461":"<div className={`overflow-hidden transition-all duration-500 ease-in-out ${isOpen ? 'max-h-[1000px]' : 'max-h-0'}`}>","462":"<div className=\"p-5 border-t border-gray-700\">","463":"{course.professorName && (","464":"<div className=\"flex items-center gap-2 text-sm text-gray-400 mb-3\">","465":"<User size={14} />","466":"<span>{course.professorName}</span>","467":"</div>","468":")}","469":"<div className=\"grid grid-cols-2 gap-x-4 gap-y-2 text-sm text-gray-300 mb-4\">","470":"<div className=\"flex justify-between\"><span>Total Sessions:</span> <span className=\"font-semibold\">{total}</span></div>","471":"<div className=\"flex justify-between\"><span>Attended:</span> <span className=\"font-semibold text-green-400\">{attended}</span></div>","472":"<div className=\"flex justify-between\"><span>Missed:</span> <span className=\"font-semibold text-red-400\">{missed}</span></div>","473":"<div className=\"flex justify-between\"><span>Sessions Left:</span> <span className=\"font-semibold\">{sessionsLeft < 0 ? 0 : sessionsLeft}</span></div>","474":"</div>","475":"<div className=\"bg-gray-900 p-3 rounded-lg mb-4\">","476":"<h4 className=\"font-bold text-center text-blue-300 mb-2\">Bunk Meter</h4>","477":"<div className=\"text-center\">","478":"<p className=\"text-2xl font-bold\">{bunksLeft >= 0 ? bunksLeft : 0}</p>","479":"<p className=\"text-xs text-gray-400\">Classes you can miss</p>","480":"</div>","481":"</div>","482":"<div className=\"mb-4\">","483":"<div className=\"w-full bg-gray-700 rounded-full h-2.5\">","484":"<div className={`${getProgressBarColor()} h-2.5 rounded-full`} style={{ width: `${totalAttended > 0 ? attendancePercentage : 0}%` }}></div>","485":"</div>","486":"{attendancePercentage < 80 && totalAttended > 0 && (","487":"<div className=\"flex items-center text-yellow-400 text-xs mt-2\">","488":"<AlertTriangle size={14} className=\"mr-1\"/>","489":"Attendance is below 80%!","490":"</div>","491":")}","492":"</div>","493":"<div className=\"mb-4\">","494":"<label className=\"block text-gray-300 text-sm font-bold mb-2\">Notes</label>","495":"<textarea value={notes} onChange={(e) => setNotes(e.target.value)} placeholder=\"Add notes, deadlines, etc...\" className=\"w-full h-24 p-2 bg-gray-900 rounded-md text-white border border-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500\"></textarea>","496":"</div>","497":"<div>","498":"<div className=\"flex gap-2 mb-2\">","499":"<button onClick={() => handleAttendance('present')} disabled={sessionsLeft <= 0} className=\"w-full flex items-center justify-center gap-2 bg-green-600 hover:bg-green-700 disabled:bg-gray-600 disabled:cursor-not-allowed text-white font-bold py-2 px-4 rounded-lg transition-colors\"><CheckCircle size={16} /> Present</button>","500":"<button onClick={() => handleAttendance('absent')} disabled={sessionsLeft <= 0} className=\"w-full flex items-center justify-center gap-2 bg-red-600 hover:bg-red-700 disabled:bg-gray-600 disabled:cursor-not-allowed text-white font-bold py-2 px-4 rounded-lg transition-colors\"><X size={16} /> Absent</button>","501":"</div>","502":"<div className=\"flex gap-2\">","503":"<button onClick={() => handleUndo('present')} disabled={attended <= 0} className=\"w-1/2 flex items-center justify-center gap-1 text-xs bg-gray-700 hover:bg-gray-600 disabled:opacity-50 text-gray-300 py-1 px-2 rounded-md transition-colors\"><Minus size={12} /> Undo Present</button>","504":"<button onClick={() => handleUndo('absent')} disabled={missed <= 0} className=\"w-1/2 flex items-center justify-center gap-1 text-xs bg-gray-700 hover:bg-gray-600 disabled:opacity-50 text-gray-300 py-1 px-2 rounded-md transition-colors\"><Minus size={12} /> Undo Absent</button>","505":"</div>","506":"</div>","507":"<div className=\"flex justify-between items-center mt-4\">","508":"<button onClick={() => setLogModalOpen(true)} className=\"flex items-center gap-2 text-sm text-blue-400 hover:underline\">","509":"<BookOpen size={16} /> View Log","510":"</button>","511":"<div className=\"flex justify-end gap-2\">","512":"<button onClick={exportLog} className=\"text-gray-400 hover:text-green-400 p-2\"><Download size={18} /></button>","513":"<button onClick={() => setEditModalOpen(true)} className=\"text-gray-400 hover:text-blue-400 p-2\"><Edit size={18} /></button>","514":"<button onClick={() => setDeleteModalOpen(true)} className=\"text-gray-400 hover:text-red-400 p-2\"><Trash2 size={18} /></button>","515":"</div>","516":"</div>","517":"</div>","518":"</div>","519":"{isEditModalOpen && <EditCourseModal course={course} onClose={() => setEditModalOpen(false)} onUpdateCourse={updateCourse} />}","520":"{isDeleteModalOpen && <DeleteConfirmationModal courseName={course.name} onClose={() => setDeleteModalOpen(false)} onDelete={deleteCourse} />}","521":"{isLogModalOpen && <AttendanceLogModal log={attendanceLog} courseId={course.id} userId={userId} onClose={() => setLogModalOpen(false)} />}","522":"</div>","523":");","524":"};","525":"","526":"","527":"// --- Modal Components ---","528":"const Modal = ({ children, onClose, size = 'max-w-md' }) => (","529":"<div className=\"fixed inset-0 bg-black bg-opacity-70 flex justify-center items-center z-50 p-4\">","530":"<div className={`bg-gray-800 rounded-lg shadow-xl w-full ${size} m-auto relative p-6 border border-gray-700`}>","531":"<button onClick={onClose} className=\"absolute top-3 right-3 text-gray-400 hover:text-white z-10\"><X size={24} /></button>","532":"{children}","533":"</div>","534":"</div>","535":");","536":"","537":"const EditProfileModal = ({ mode, currentProfile, onSave, onClose }) => {","538":"const [name, setName] = useState(currentProfile.name || '');","539":"const [timetableBase64, setTimetableBase64] = useState(currentProfile.timetableUrl || '');","540":"const isInitialSetup = !currentProfile.name;","541":"","542":"const handleFileChange = (e) => {","543":"const file = e.target.files[0];","544":"if (file) {","545":"const reader = new FileReader();","546":"reader.onloadend = () => {","547":"setTimetableBase64(reader.result);","548":"};","549":"reader.readAsDataURL(file);","550":"}","551":"};","552":"","553":"const handleRemoveImage = () => {","554":"setTimetableBase64('');","555":"};","556":"","557":"const handleSubmit = (e) => {","558":"e.preventDefault();","559":"const nameToSave = (mode === 'profile' || isInitialSetup) ? name : currentProfile.name;","560":"const timetableToSave = (mode === 'timetable' || isInitialSetup) ? timetableBase64 : currentProfile.timetableUrl;","561":"","562":"if (isInitialSetup && !nameToSave.trim()) {","563":"alert(\"Please enter your name to set up your profile.\");","564":"return;","565":"}","566":"","567":"onSave(nameToSave, timetableToSave);","568":"};","569":"","570":"return (","571":"<Modal onClose={onClose}>","572":"<h2 className=\"text-2xl font-bold mb-6 text-white\">","573":"{isInitialSetup ? 'Welcome! Set up your profile' : mode === 'profile' ? 'Edit Your Name' : 'Update Timetable'}","574":"</h2>","575":"<form onSubmit={handleSubmit}>","576":"{(mode === 'profile' || isInitialSetup) && (","577":"<div className=\"mb-4\">","578":"<label htmlFor=\"userName\" className=\"block text-gray-300 text-sm font-bold mb-2\">Name</label>","579":"<input type=\"text\" id=\"userName\" value={name} onChange={(e) => setName(e.target.value)} className=\"shadow appearance-none border border-gray-600 rounded w-full py-2 px-3 bg-gray-700 text-white leading-tight focus:outline-none focus:shadow-outline focus:border-blue-500\" required autoFocus/>","580":"</div>","581":")}","582":"{(mode === 'timetable' || isInitialSetup) && (","583":"<div className=\"mb-4\">","584":"<label className=\"block text-gray-300 text-sm font-bold mb-2\">Timetable Image</label>","585":"{timetableBase64 ? (","586":"<div className=\"mt-2 text-center\">","587":"<img src={timetableBase64} alt=\"Timetable preview\" className=\"max-w-full max-h-60 mx-auto rounded-md mb-2\"/>","588":"<button type=\"button\" onClick={handleRemoveImage} className=\"text-sm text-red-400 hover:text-red-300\">Remove Image</button>","589":"</div>","590":") : (","591":"<label htmlFor=\"timetableUpload\" className=\"w-full flex items-center justify-center px-4 py-3 bg-gray-700 text-gray-300 rounded-lg cursor-pointer hover:bg-gray-600 hover:text-white transition-colors\">","592":"<Upload size={20} className=\"mr-2\"/>","593":"<span>Choose an image...</span>","594":"</label>","595":")}","596":"<input type=\"file\" id=\"timetableUpload\" accept=\"image/*\" onChange={handleFileChange} className=\"hidden\"/>","597":"</div>","598":")}","599":"<div className=\"flex items-center justify-end gap-3 mt-6\">","600":"<button type=\"button\" onClick={onClose} className=\"bg-gray-600 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded-lg transition-colors\">Cancel</button>","601":"<button type=\"submit\" className=\"bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-lg transition-colors\">Save</button>","602":"</div>","603":"</form>","604":"</Modal>","605":");","606":"};","607":"","608":"const TimetableModal = ({ timetableUrl, onClose, onChangeTimetable }) => (","609":"<Modal onClose={onClose} size=\"max-w-3xl\">","610":"<h2 className=\"text-2xl font-bold mb-4 text-white\">Your Timetable</h2>","611":"<div className=\"bg-gray-900 p-2 rounded-lg\">","612":"<img src={timetableUrl} alt=\"Class Timetable\" className=\"max-w-full max-h-[75vh] mx-auto rounded-md\" />","613":"</div>","614":"<div className=\"flex justify-center mt-4\">","615":"<button","616":"onClick={onChangeTimetable}","617":"className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 hover:bg-blue-700 rounded-lg shadow-lg transition-all transform hover:scale-105\"","618":">","619":"<Edit size={18} />","620":"Change Timetable","621":"</button>","622":"</div>","623":"</Modal>","624":");","625":"","626":"const AddCourseModal = ({ onClose, onAddCourse }) => {","627":"const [name, setName] = useState('');","628":"const [professorName, setProfessorName] = useState('');","629":"const [totalSessions, setTotalSessions] = useState('');","630":"const [schedule, setSchedule] = useState({ days: [], time: '' });","631":"const [error, setError] = useState('');","632":"","633":"const handleDayChange = (day) => {","634":"setSchedule(prev => {","635":"const newDays = prev.days.includes(day)","636":"? prev.days.filter(d => d !== day)","637":": [...prev.days, day];","638":"return { ...prev, days: newDays };","639":"});","640":"};","641":"","642":"const handleSubmit = (e) => {","643":"e.preventDefault();","644":"if (!name.trim() || !totalSessions || parseInt(totalSessions, 10) <= 0) {","645":"setError(\"Please enter a valid course name and a positive number for total sessions.\");","646":"return;","647":"}","648":"setError('');","649":"onAddCourse({ name: name.trim(), professorName: professorName.trim(), totalSessions: parseInt(totalSessions, 10), notes: '', schedule });","650":"};","651":"","652":"const daysOfWeek = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];","653":"","654":"return (","655":"<Modal onClose={onClose}>","656":"<h2 className=\"text-2xl font-bold mb-4 text-white\">Add New Course</h2>","657":"<form onSubmit={handleSubmit}>","658":"<div className=\"mb-4\">","659":"<label htmlFor=\"courseName\" className=\"block text-gray-300 text-sm font-bold mb-2\">Course Name</label>","660":"<input type=\"text\" id=\"courseName\" value={name} onChange={(e) => setName(e.target.value)} className=\"shadow appearance-none border border-gray-600 rounded w-full py-2 px-3 bg-gray-700 text-white leading-tight focus:outline-none focus:shadow-outline focus:border-blue-500\" required />","661":"</div>","662":"<div className=\"mb-4\">","663":"<label htmlFor=\"professorName\" className=\"block text-gray-300 text-sm font-bold mb-2\">Professor Name (Optional)</label>","664":"<input type=\"text\" id=\"professorName\" value={professorName} onChange={(e) => setProfessorName(e.target.value)} className=\"shadow appearance-none border border-gray-600 rounded w-full py-2 px-3 bg-gray-700 text-white leading-tight focus:outline-none focus:shadow-outline focus:border-blue-500\" />","665":"</div>","666":"<div className=\"mb-4\">","667":"<label htmlFor=\"totalSessions\" className=\"block text-gray-300 text-sm font-bold mb-2\">Total Number of Sessions</label>","668":"<input type=\"number\" id=\"totalSessions\" value={totalSessions} onChange={(e) => setTotalSessions(e.target.value)} className=\"shadow appearance-none border border-gray-600 rounded w-full py-2 px-3 bg-gray-700 text-white leading-tight focus:outline-none focus:shadow-outline focus:border-blue-500\" required min=\"1\" />","669":"</div>","670":"<div className=\"mb-4\">","671":"<label className=\"block text-gray-300 text-sm font-bold mb-2\">Class Schedule (Optional)</label>","672":"<div className=\"flex flex-wrap gap-2 mb-2\">","673":"{daysOfWeek.map(day => (","674":"<button key={day} type=\"button\" onClick={() => handleDayChange(day)} className={`px-3 py-1 text-sm rounded-full ${schedule.days.includes(day) ? 'bg-blue-600 text-white' : 'bg-gray-700 text-gray-300'}`}>","675":"{day.substring(0,3)}","676":"</button>","677":"))}","678":"</div>","679":"<input type=\"time\" value={schedule.time} onChange={(e) => setSchedule(prev => ({...prev, time: e.target.value}))} className=\"shadow appearance-none border border-gray-600 rounded w-full py-2 px-3 bg-gray-700 text-white leading-tight focus:outline-none focus:shadow-outline focus:border-blue-500\" />","680":"</div>","681":"{error && <p className=\"text-red-400 text-sm mb-4\">{error}</p>}","682":"<div className=\"flex items-center justify-end gap-3\">","683":"<button type=\"button\" onClick={onClose} className=\"bg-gray-600 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded-lg transition-colors\">Cancel</button>","684":"<button type=\"submit\" className=\"bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-lg transition-colors\">Add Course</button>","685":"</div>","686":"</form>","687":"</Modal>","688":");","689":"};","690":"","691":"const EditCourseModal = ({ course, onClose, onUpdateCourse }) => {","692":"const [name, setName] = useState(course.name);","693":"const [professorName, setProfessorName] = useState(course.professorName || '');","694":"const [totalSessions, setTotalSessions] = useState(course.totalSessions);","695":"const [schedule, setSchedule] = useState(course.schedule || { days: [], time: '' });","696":"const [error, setError] = useState('');","697":"","698":"const handleDayChange = (day) => {","699":"setSchedule(prev => {","700":"const newDays = prev.days.includes(day)","701":"? prev.days.filter(d => d !== day)","702":": [...prev.days, day];","703":"return { ...prev, days: newDays };","704":"});","705":"};","706":"","707":"const handleSubmit = (e) => {","708":"e.preventDefault();","709":"const attendedTotal = course.attendedSessions + course.missedSessions;","710":"if (parseInt(totalSessions, 10) < attendedTotal) {","711":"setError(`Total sessions cannot be less than the number of sessions already recorded (${attendedTotal}).`);","712":"return;","713":"}","714":"setError('');","715":"onUpdateCourse({ ...course, name, professorName, totalSessions: parseInt(totalSessions, 10), schedule });","716":"};","717":"","718":"const daysOfWeek = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];","719":"","720":"return (","721":"<Modal onClose={onClose}>","722":"<h2 className=\"text-2xl font-bold mb-4 text-white\">Edit Course</h2>","723":"<form onSubmit={handleSubmit}>","724":"<div className=\"mb-4\">","725":"<label htmlFor=\"editCourseName\" className=\"block text-gray-300 text-sm font-bold mb-2\">Course Name</label>","726":"<input type=\"text\" id=\"editCourseName\" value={name} onChange={(e) => setName(e.target.value)} className=\"shadow appearance-none border border-gray-600 rounded w-full py-2 px-3 bg-gray-700 text-white leading-tight focus:outline-none focus:shadow-outline focus:border-blue-500\" required />","727":"</div>","728":"<div className=\"mb-4\">","729":"<label htmlFor=\"editProfessorName\" className=\"block text-gray-300 text-sm font-bold mb-2\">Professor Name (Optional)</label>","730":"<input type=\"text\" id=\"editProfessorName\" value={professorName} onChange={(e) => setProfessorName(e.target.value)} className=\"shadow appearance-none border border-gray-600 rounded w-full py-2 px-3 bg-gray-700 text-white leading-tight focus:outline-none focus:shadow-outline focus:border-blue-500\" />","731":"</div>","732":"<div className=\"mb-4\">","733":"<label htmlFor=\"editTotalSessions\" className=\"block text-gray-300 text-sm font-bold mb-2\">Total Number of Sessions</label>","734":"<input type=\"number\" id=\"editTotalSessions\" value={totalSessions} onChange={(e) => setTotalSessions(e.target.value)} className=\"shadow appearance-none border border-gray-600 rounded w-full py-2 px-3 bg-gray-700 text-white leading-tight focus:outline-none focus:shadow-outline focus:border-blue-500\" required min=\"1\" />","735":"</div>","736":"<div className=\"mb-6\">","737":"<label className=\"block text-gray-300 text-sm font-bold mb-2\">Class Schedule (Optional)</label>","738":"<div className=\"flex flex-wrap gap-2 mb-2\">","739":"{daysOfWeek.map(day => (","740":"<button key={day} type=\"button\" onClick={() => handleDayChange(day)} className={`px-3 py-1 text-sm rounded-full ${schedule.days.includes(day) ? 'bg-blue-600 text-white' : 'bg-gray-700 text-gray-300'}`}>","741":"{day.substring(0,3)}","742":"</button>","743":"))}","744":"</div>","745":"<input type=\"time\" value={schedule.time} onChange={(e) => setSchedule(prev => ({...prev, time: e.target.value}))} className=\"shadow appearance-none border border-gray-600 rounded w-full py-2 px-3 bg-gray-700 text-white leading-tight focus:outline-none focus:shadow-outline focus:border-blue-500\" />","746":"</div>","747":"{error && <p className=\"text-red-400 text-sm mb-4\">{error}</p>}","748":"<div className=\"flex items-center justify-end gap-3\">","749":"<button type=\"button\" onClick={onClose} className=\"bg-gray-600 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded-lg transition-colors\">Cancel</button>","750":"<button type=\"submit\" className=\"bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-lg transition-colors\">Save Changes</button>","751":"</div>","752":"</form>","753":"</Modal>","754":");","755":"};","756":"","757":"const DeleteConfirmationModal = ({ courseName, onClose, onDelete }) => (","758":"<Modal onClose={onClose}>","759":"<div className=\"text-center\">","760":"<AlertTriangle className=\"mx-auto mb-4 text-red-500\" size={48} />","761":"<h3 className=\"mb-2 text-xl font-bold text-white\">Are you sure?</h3>","762":"<p className=\"text-gray-400 mb-6\">Do you really want to delete <span className=\"font-semibold text-red-400\">\"{courseName}\"</span>? This action cannot be undone.</p>","763":"<div className=\"flex justify-center gap-4\">","764":"<button onClick={onClose} className=\"px-6 py-2 font-semibold text-white bg-gray-600 hover:bg-gray-700 rounded-lg\">Cancel</button>","765":"<button onClick={onDelete} className=\"px-6 py-2 font-semibold text-white bg-red-600 hover:bg-red-700 rounded-lg\">Delete</button>","766":"</div>","767":"</div>","768":"</Modal>","769":");","770":"","771":"const AlertModal = ({ message, onClose }) => (","772":"<Modal onClose={onClose}>","773":"<div className=\"text-center\">","774":"<Info className=\"mx-auto mb-4 text-blue-400\" size={48} />","775":"<h3 className=\"mb-2 text-xl font-bold text-white\">Information</h3>","776":"<p className=\"text-gray-300 mb-6\">{message}</p>","777":"<div className=\"flex justify-center\">","778":"<button onClick={onClose} className=\"px-8 py-2 font-semibold text-white bg-blue-600 hover:bg-blue-700 rounded-lg\">OK</button>","779":"</div>","780":"</div>","781":"</Modal>","782":");","783":"","784":"const AttendanceLogModal = ({ log, courseId, userId, onClose }) => {","785":"const handleDelete = async (logId) => {","786":"const logDocRef = doc(db, `artifacts/${appId}/users/${userId}/courses/${courseId}/log`, logId);","787":"await deleteDoc(logDocRef);","788":"};","789":"","790":"return (","791":"<Modal onClose={onClose} size=\"max-w-lg\">","792":"<h2 className=\"text-2xl font-bold mb-4 text-white\">Attendance Log</h2>","793":"<div className=\"max-h-96 overflow-y-auto space-y-2 pr-2\">","794":"{log.length > 0 ? log.map(entry => (","795":"<div key={entry.id} className=\"flex justify-between items-center bg-gray-900 p-3 rounded-lg\">","796":"<div>","797":"<span className={`font-bold ${entry.status === 'present' ? 'text-green-400' : 'text-red-400'}`}>","798":"{entry.status.charAt(0).toUpperCase() + entry.status.slice(1)}","799":"</span>","800":"<p className=\"text-xs text-gray-400\">","801":"{entry.timestamp ? new Date(entry.timestamp.seconds * 1000).toLocaleString() : 'Just now'}","802":"</p>","803":"</div>","804":"<button onClick={() => handleDelete(entry.id)} className=\"p-1 text-gray-500 hover:text-red-400\">","805":"<Trash2 size={16} />","806":"</button>","807":"</div>","808":")) : (","809":"<p className=\"text-gray-400 text-center py-4\">No attendance records yet.</p>","810":")}","811":"</div>","812":"</Modal>","813":");","814":"};"}